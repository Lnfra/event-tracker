{"version":3,"sources":["user.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;YAKA;gBAGE,qBAAoB,KAAW;oBAAX,UAAK,GAAL,KAAK,CAAM;oBAFvB,SAAI,GAAG,2CAA2C,CAAC;gBAG3D,CAAC;gBAED,8BAAQ,GAAR;oBACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;yBAC7B,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBAC7B,CAAC;gBAED,6BAAO,GAAP,UAAQ,MAAM;oBACZ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;yBAC3C,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBAC7B,CAAC;gBAED,6BAAO,GAAP,UAAQ,IAAI;oBACV,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;yBACpD,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBAC7B,CAAC;gBAED,gCAAU,GAAV,UAAW,IAAI;oBACX,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;yBAClE,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBAC/B,CAAC;gBAED,gCAAU,GAAV,UAAW,IAAI;oBACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBAC/C,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBAC5B,CAAC;gBAEO,gCAAU,GAAlB,UAAmB,MAAM;oBACvB,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC;gBAClC,CAAC;gBAlCH;oBAAC,iBAAU,EAAE;;+BAAA;gBAmCb,kBAAC;YAAD,CAlCA,AAkCC,IAAA;YAlCD,qCAkCC,CAAA","file":"user.service.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Http} from 'angular2/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class UserService {\n  private _url = \"http://jsonplaceholder.typicode.com/users\";\n\n  constructor(private _http: Http){\n  }\n\n  getUsers(){\n    return this._http.get(this._url)\n      .map( res => res.json());\n  }\n\n  getUser(userId) {\n    return this._http.get(this.getUserUrl(userId))\n      .map( res => res.json());\n  }\n\n  addUser(user){\n    return this._http.post(this._url, JSON.stringify(user))\n      .map( res => res.json());\n  }\n\n  updateUser(user){\n      return this._http.put(this.getUserUrl(user.id), JSON.stringify(user))\n        .map( res => res.json());\n  }\n\n  deleteUser(user){\n    return this._http.delete(this.getUserUrl(user.id))\n      .map(res => res.json());\n  }\n\n  private getUserUrl(userId){\n    return this._url + '/' + userId;\n  }\n}\n"],"sourceRoot":"/source/"}