{"version":3,"sources":["shared/pagination.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAuBA;gBAAA;oBACW,UAAK,GAAG,EAAE,CAAC;oBACA,aAAQ,GAAG,EAAE,CAAC;oBACV,gBAAW,GAAG,IAAI,mBAAY,EAAE,CAAC;gBAmC3D,CAAC;gBA/BC,yCAAW,GAAX;oBACE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACnD,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;oBACd,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,EAAE,EAAC,CAAC;wBACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrB,CAAC;gBACH,CAAC;gBAED,wCAAU,GAAV,UAAW,IAAI;oBACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,CAAC;gBAED,sCAAQ,GAAR;oBACE,EAAE,CAAA,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,CAAA,CAAC;wBACxB,MAAM,CAAC;oBACT,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC1C,CAAC;gBACH,CAAC;gBAED,kCAAI,GAAJ;oBACI,EAAE,CAAA,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAC;wBACxC,MAAM,CAAC;oBACT,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC1C,CAAC;gBACL,CAAC;gBApCD;oBAAC,YAAK,EAAE;;kEAAA;gBACR;oBAAC,YAAK,CAAC,WAAW,CAAC;;qEAAA;gBACnB;oBAAC,aAAM,CAAC,cAAc,CAAC;;wEAAA;gBAxBzB;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,knBAiBD;qBACV,CAAC;;uCAAA;gBAuCF,0BAAC;YAAD,CAtCA,AAsCC,IAAA;YAtCD,qDAsCC,CAAA","file":"shared/pagination.component.js","sourcesContent":["import {Component, OnChanges, Input, Output, EventEmitter} from 'angular2/core';\n\n@Component({\n  selector: 'pagination',\n  template: `\n    <nav>\n      <ul class=\"pagination\">\n        <li [class.disabled]=\"currentPage == 1\">\n          <a (click)=\"previous()\" aria-label=\"Previous\">\n            <span aria-hidden=\"true\">&laquo;</span>\n          </a>\n        </li>\n        <li [class.active]=\"currentPage == page\" *ngFor=\"#page of pages\" (click)=\"changePage(page)\">\n          <a>{{ page }}</a>\n        </li>\n        <li [class.disabled]=\"currentPage == pages.length\">\n          <a (click)=\"next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&raquo;</span>\n          </a>\n        </li>\n      </ul>\n    </nav>`\n})\nexport class PaginationComponent implements OnChanges{\n  @Input() items = [];\n  @Input('page-size') pageSize = 10;\n  @Output('page-changed') pageChanged = new EventEmitter();\n  pages: any[];\n  currentPage;\n\n  ngOnChanges(){\n    this.currentPage = 1;\n    var pagesCount = this.items.length / this.pageSize;\n    this.pages=[];\n    for(var i = 1; i <= pagesCount; i++){\n      this.pages.push(i);\n    }\n  }\n\n  changePage(page){\n     this.currentPage = page;\n     this.pageChanged.emit(page);\n  }\n\n  previous(){\n    if(this.currentPage == 1){\n      return;\n    } else {\n      this.currentPage--;\n      this.pageChanged.emit(this.currentPage);\n    }\n  }\n\n  next(){\n      if(this.currentPage == this.pages.length){\n        return;\n      } else {\n        this.currentPage++;\n        this.pageChanged.emit(this.currentPage);\n      }\n  }\n}\n"],"sourceRoot":"/source/"}